{"version":3,"file":"install-script.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,YAAY;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://@dfinity/service-worker/./src/index.ts"],"sourcesContent":["function updateStatus(message) {\n    const statusEl = document.getElementById('status');\n    if (statusEl) {\n        statusEl.innerText = message;\n    }\n}\nwindow.addEventListener('load', async () => {\n    // Verify user's web browser has necessary support\n    const unsupported = [\n        ['serviceWorker', window.navigator.serviceWorker],\n        ['BigInt', window.BigInt],\n        ['WebAssembly', window.WebAssembly],\n    ]\n        .filter((tuple) => !tuple[1])\n        .map((tuple) => tuple[0])\n        .join(', ');\n    if (unsupported) {\n        updateStatus(`This web browser cannot interact with the Internet Computer securely.  (No: ${unsupported})\n       Please try new web browser software.`);\n    }\n    else {\n        console.log('Installing a service worker to proxy and validate raw content into the browser...');\n        // Ok, let's install the service worker...\n        // note: if the service worker was already installed, when the browser requested <domain>/, it would have\n        // proxied the response from <domain>/<canister-id>/, so this bootstrap file would have never been\n        // retrieved from the boundary nodes\n        await navigator.serviceWorker.register('sw.js');\n    }\n});\n"],"names":[],"sourceRoot":""}